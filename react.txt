verifique as versoes do Node e do npm: 
	node -v
	npm -v

crie um app com o comando a seguir no terminal vsCode:
	npx create-react-app my-app

o que foi gerado?
	node_modules: modulos do node para o react funcionar
	public:
	->index.html //html root onde o js gerará os elementos
	src: nessa pasta tem o css e o js
	->index.js // onde adicionamos os elementos
	->app.js // onde tá a pagina inicial
	
em seguida: 
	cd my-app	
	npm start

	ctrl + c, retorna pro terminal e digitando 's'

Aula 04

	*JSX é a maneira de escrever HTML com o React
	*Podemos interpolar variaveis, inserindo ela entre {}
	*É possivel executar funcoes em JSX;
	*Inserir valores em atributos de tags também é válido em JSX;

obs:o return nao aceita q todas as tags estejam no mesmo nivel, ou seja, 
deve haver uma div que contenha todas as outras.

Aula 05
	Componentes
	*permite dividir a aplicação em partes;
	*Os componentes rendeziram jSX, assim como App.js(que é um componente);
	*Criar um arquivo de componente;
	*Importar um componente;
	*Nomalmente ficm em uma pasta chamada components;

	Crie uma pasta dentro de src chamada components.
	Adicione o nome de seu componente com camelCase, inicial maiuscula, 
extensão '.js' .ex: 
	componente HelloWorld
	```
	function HelloWorld() {
	
	return (
		<div></div>
	)
	}
	export default HelloWorld //Exportr com o nome do componente
	´´´´
	
	App.js
	```
	import HelloWorld form "./components/HelloWorld"
	...
	<div className='App'>
		<helloWorld/>
	</div>
	´´´

Aula 06
	Props
	*As props sao valores passados para os componentes;
	*Podemos deixa-los dinamicos mudando a execucao por causa do valor
da props
	*E prescisa ser resgatado dentro de ua propriedade/argumento
chamada props na funcao de definicao do componentes;
	*Props sao somente leitura.
 
	Ao usar um componente já declarado e importado é possivel, no uso da tag do
componente, passar valores para atributos de objetos, argumentos das funcoes desses 
componentes.